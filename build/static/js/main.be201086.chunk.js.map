{"version":3,"sources":["Utils/AuthContext.js","Utils/authToken.js","Utils/Input.jsx","components/Login.jsx","components/Header.jsx","components/Contact.jsx","components/Body.jsx","Utils/pusher.js","components/Footer.jsx","components/Create.jsx","components/Thread.jsx","components/EmptyBody.jsx","components/Chat.jsx","components/Logout.jsx","components/MainComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["authContext","React","createContext","userToken","localStorage","getItem","Input","value","id","label","name","placeholder","className","onchange","rest","htmlFor","onChange","Login","props","setLogin","setState","isLogin","isRegister","setRegister","handleLoginChange","e","login_account","state","target","handleRegChange","reg_account","handleLoginSubmit","a","preventDefault","loading","object","username","password","axios","post","response","setItem","data","token","setTimeout","window","location","errors","console","log","handleImageChange","image","files","handleRegisterSubmit","form_data","FormData","append","username_1","password_1","password_2","headers","href","this","onClick","login","style","color","onSubmit","type","required","Component","Header","useContext","roomMessages","typing","roomNumber","createContact","is_thread","is_group","threadRoom","user","thread_typing","checkOnlineStatus","date","last_login","last_logout","moment","calendar","to","first_user","user_id","second_username","first_username","second_user","users_lists","length","Contact","filterRooms","threads","handleSearchContact","searchText","action","map","room","key","message","thread","thread_messages","Body","match","getRoomMessages","params","useEffect","parseInt","user_name","time_stamp","format","pusher","Pusher","cluster","Footer","useState","handleChange","connection","bind","roomObject","socket_id","Token","get","threadObject","handleSubmit","messageObject","disabled","Create","create","prevState","contactObject","other_user","Thread","getThreadNumber","EmptyBody","Chat","path","component","Logout","logMeOut","clear","MainComponent","broadcastMessage","channel","subscribe","that","setUserName","getRooms","rooms","clicked","apiCall","roomMessag","bodyHeight","document","querySelector","scroll","scrollHeight","getThreads","jwtDecode","room_number","thread_id","unsubscribe","unbind_all","filter","toLowerCase","indexOf","Provider","contextType","App","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.be201086.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst authContext = React.createContext(true);\r\n\r\nexport default authContext;","\r\nexport default {\r\n    userToken: localStorage.getItem('token')\r\n}","import React from 'react'\r\n\r\nconst Input = ({value, id, label, name, placeholder, className, onchange, ...rest}) => {\r\n    return <div>\r\n        <label htmlFor={id}>{label}</label>\r\n        <input value={value}\r\n                  name={name}\r\n                  placeholder={placeholder}\r\n                  className={className}\r\n                  onChange={onchange}\r\n                    {...rest}/>\r\n    </div>\r\n}\r\n\r\nexport default Input;","import React, {Component, Fragment} from 'react';\r\nimport Input from \"../Utils/Input\";\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: true,\r\n            isRegister: false,\r\n            login_account: {username: '', password: ''},\r\n            reg_account: {username_1: '', password_1: '', password_2: ''},\r\n            image:null,\r\n            loading: false,\r\n            errors: {},\r\n        }\r\n    }\r\n\r\n    setLogin = () => {\r\n        this.setState({isLogin: true, isRegister: false})\r\n    };\r\n\r\n    setRegister = () => {\r\n        this.setState({isLogin: false, isRegister: true})\r\n    };\r\n\r\n    handleLoginChange = (e) => {\r\n        const login_account = {...this.state.login_account};\r\n        login_account[e.target.name] = e.target.value;\r\n        this.setState({login_account})\r\n    };\r\n\r\n    handleRegChange = (e) => {\r\n        const reg_account = {...this.state.reg_account};\r\n        reg_account[e.target.name] = e.target.value;\r\n        this.setState({reg_account})\r\n    };\r\n\r\n    handleLoginSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({loading: true});\r\n        const {login_account} = this.state;\r\n        const object = {\r\n            username: login_account.username,\r\n            password: login_account.password,\r\n        };\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/auth/login/', object);\r\n            localStorage.setItem('token', response.data.token);\r\n            setTimeout(() => {\r\n                this.setState({loading: false});\r\n                window.location = '/chat'\r\n            }, 2500)\r\n        } catch (e) {\r\n            this.setState({loading: false});\r\n            const errors = {...this.state.errors};\r\n            errors['login'] = e.response.data['non_field_errors'];\r\n            this.setState({errors})\r\n            console.log(errors)\r\n        }\r\n\r\n    };\r\n    handleImageChange = (e) => {\r\n        this.setState({image:e.target.files[0]})\r\n    };\r\n\r\n    handleRegisterSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const {reg_account, image} = this.state;\r\n        console.log(image)\r\n        const form_data = new FormData();\r\n        this.setState({loading:true});\r\n        form_data.append('username', reg_account.username_1);\r\n        form_data.append('password', reg_account.password_1);\r\n        form_data.append('password2', reg_account.password_2);\r\n        form_data.append('thumbnail', image, image.name );\r\n        try{\r\n            const response = await axios.post('http://localhost:8000/api/user/', form_data, {\r\n                headers:{'Content-Type': 'multipart/form-data'}\r\n            });\r\n            localStorage.setItem('token', response.data.token);\r\n            console.log(response)\r\n            setTimeout(() => {\r\n                this.setState({loading:false});\r\n                window.location.href = '/chat'\r\n            }, 2000)\r\n        }catch (e) {\r\n            this.setState({loading:false});\r\n           const errors = {...this.state.errors} ;\r\n           errors['username'] = e.response.data['username'];\r\n            this.setState({errors})\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const {isLogin, isRegister, login_account, reg_account, loading, errors} = this.state;\r\n        return (\r\n            <Fragment>\r\n                {loading && <div className='spinner'/>}\r\n                <div className=\"authentication\">\r\n                    <div className=\"auth-button\">\r\n                        <button className={isLogin ? 'dark' : null} onClick={this.setLogin}>Login</button>\r\n                        <button className={isRegister ? 'dark' : null} onClick={this.setRegister}>Register</button>\r\n                    </div>\r\n                    <div className=\"authorize\">\r\n                        <div className={isLogin ? 'login-section show' : 'login-section'}>\r\n                            <div className=\"form-section\">\r\n                                {errors.login && <small style={{color: 'red'}}>{errors.login}</small>}\r\n                                <form onSubmit={this.handleLoginSubmit}>\r\n                                    <Input placeholder='username'\r\n                                           className='input-class'\r\n                                           label='Username'\r\n                                           value={login_account.username}\r\n                                           onchange={this.handleLoginChange}\r\n                                           name='username'\r\n                                           type='text'/>\r\n                                    <Input placeholder='Password'\r\n                                           className='input-class'\r\n                                           value={login_account.password}\r\n                                           name='password'\r\n                                           onchange={this.handleLoginChange}\r\n                                           label='Password'\r\n                                           type='password'/>\r\n                                    <button>Login</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className={isRegister ? 'register-section show' : 'register-section'}>\r\n                            <div className=\"form-section\">\r\n                                {errors.username && <small style={{color:'red'}}>{errors.username}</small> }\r\n                                <form onSubmit={this.handleRegisterSubmit}>\r\n                                    <Input placeholder='Enter Username'\r\n                                           label='Username'\r\n                                           required\r\n                                           value={reg_account.username}\r\n                                           name='username_1'\r\n                                           onchange={this.handleRegChange}\r\n                                           className='input-class'\r\n                                           type='text'/>\r\n                                    <Input placeholder='Password'\r\n                                           required\r\n                                           className='input-class'\r\n                                           value={reg_account.password_1}\r\n                                           name='password_1'\r\n                                           onchange={this.handleRegChange}\r\n                                           label='Password'\r\n                                           type='password'/>\r\n                                    <Input placeholder='Confirm password'\r\n                                           className='input-class'\r\n                                           required\r\n                                           onchange={this.handleRegChange}\r\n                                           value={reg_account.password_2}\r\n                                           name='password_2'\r\n                                           label='Confirm Password'\r\n                                           type='password'/>\r\n                                    <Input type='file'\r\n                                           label='profile picture'\r\n                                           required\r\n                                           onchange={this.handleImageChange}\r\n                                           className='input-class'/>\r\n                                    <button className=''>Create User</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Fragment} from 'react';\nimport authContext from \"../Utils/AuthContext\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction Header(props) {\n    const {roomMessages, typing,  username, roomNumber,\n        createContact, is_thread, is_group, threadRoom, user, thread_typing} = React.useContext(authContext);\n    const checkOnlineStatus = (date) =>{\n        if(date.last_login > date.last_logout) return 'online';\n        else return `last seen ${moment(date.last_logout).calendar()}`\n    };\n\n\n    return (\n        <Fragment>\n            <div className=\"header\">\n                <div className=\"social-links\">\n                    <div className='link2'>\n                        <i className=\"fa fa-paperclip\"/>\n                        <div className=\"tool-tip\">\n                            <p>attach file</p>\n                        </div>\n                    </div>\n                    <div className='link2'>\n                        <i onClick={createContact} className=\"fa fa-plus\"/>\n                        <div className=\"tool-tip\">\n                            <p>create contact</p>\n                        </div>\n                    </div>\n                    <div className='link2'>\n                        <Link to='/logout'><i  className=\"fa fa-refresh\"/></Link>\n                        <div className=\"tool-tip\">\n                            <p>logout</p>\n                        </div>\n                    </div>\n                    <div className='link2'>\n                        <i className=\"fa fa-filter\"/>\n                        <div className=\"tool-tip\">\n                            <p>filter message</p>\n                        </div>\n                    </div>\n                </div>\n                {is_thread &&\n                <div className=\"profile__authentication\">\n                    <div className=\"user-detail\">\n                        <i className=\"fa fa-user\"/>\n                    </div>\n                    <div className=\"user-texts\">\n                        <h5>{threadRoom.first_user && threadRoom.first_user.id === user.user_id ? threadRoom.second_username : threadRoom.first_username}</h5>\n                        {!thread_typing ? threadRoom.first_user && threadRoom.first_user.id === user.user_id ?\n                            threadRoom.first_user && <small>{checkOnlineStatus(threadRoom.second_user)}</small> : threadRoom.second_user && <small>{checkOnlineStatus(threadRoom.first_user)}</small> : null }\n                         {thread_typing ?  <small className='typing'>typing...</small> : null}\n                    </div>\n                </div>}\n                {is_group &&\n                <div className=\"profile__authentication\">\n                    <div className=\"user-detail\">\n                        <i className=\"fa fa-user\"/>\n                    </div>\n                    <div className=\"user-texts\">\n                        <h5>{roomMessages.name}</h5>\n                         {typing ? roomMessages.id === roomNumber && <small className='typing'>{username} is typing...</small> : null}\n                        {roomMessages.users_lists && roomMessages.users_lists.length > 0 && <p className={typing ? 'none' : null}>{roomMessages.users_lists.length} users</p>}\n                    </div>\n                </div>}\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Header;","import React, {Fragment} from 'react';\r\nimport authContext from \"../Utils/AuthContext\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Contact(props) {\r\n    const {filterRooms, threads, user, thread_typing, handleSearchContact, searchText} = React.useContext(authContext);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"contact\">\r\n                <div className=\"form-class\">\r\n                    <form action=\"#\">\r\n                        <input type=\"text\"\r\n                                value={searchText}\r\n                               onChange={handleSearchContact}\r\n                               placeholder=\"search for chat\"/>\r\n                        <i className=\"fa fa-search\"/>\r\n                    </form>\r\n                </div>\r\n                {filterRooms.map(room => {\r\n                    return <div key={room.id} className=\"contact-details\">\r\n                        <div className=\"contact-pic\">\r\n                            <i className='fa fa-user'/>\r\n                        </div>\r\n                        <div  className=\"contact-name\">\r\n                            <Link to={`/chat/body/${room.id}`}>\r\n                            <h5>{room.name}</h5>\r\n                            {room.message.length > 0 && <p className={'clicked'}>{room.message[room.message.length - 1].message}</p>}\r\n                            </Link>\r\n                            </div>\r\n                    </div>\r\n                })}\r\n\r\n                    {threads.map(thread => {\r\n                         return <div key={thread.id} className=\"contact-details\">\r\n                        <div className=\"contact-pic\">\r\n                            <i className='fa fa-user'/>\r\n                        </div>\r\n                        <div   className=\"contact-name\">\r\n                            <Link to={`/chat/thread/${thread.first_user.id}/${thread.second_user.id}`}>\r\n                                <h5>{thread.first_user.id === user.user_id ? thread.second_username : thread.first_username}</h5>\r\n                                {!thread_typing && <>  {thread.thread_messages.length > 0 && <p className={'clicked'}>{thread.thread_messages[thread.thread_messages.length - 1].message}</p>} </>}\r\n                                {thread_typing && <small>Typing.....</small>}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    })}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React, {Fragment, useEffect} from 'react';\nimport authContext from \"../Utils/AuthContext\";\nimport moment from \"moment\";\n\nfunction Body({match}) {\n    const {roomMessages, user, getRoomMessages} = React.useContext(authContext);\n    const { room } = match.params;\n    useEffect(() => {\n        getRoomMessages(parseInt(room))\n    }, [room, getRoomMessages]);\n    return (\n        <Fragment>\n            <div className=\"body\">\n                {roomMessages.message && roomMessages.message.length > 0 ? <>\n                {roomMessages.message && roomMessages.message.map(room => {\n                    return <div key={room.id} className={user.username === room.user_name ? \"message__details sender\" : \"message__details\"}>\n                        <div className={user.username === room.user_name ? \"pointer2\" : 'pointer'}/>\n                        {user.username !== room.user_name ? <h4>{room.user_name}</h4>: null}\n                        <p>{room.message}</p>\n                        <small className=\"float-message\">{moment(room.time_stamp).format('LT')}</small>\n                    </div>\n                })}\n\n                </>\n                :\n                <div className='empty-message'>\n                    <div className=\"empty-icon\">\n                        <i className='fa fa-star-half-o'/>\n                    </div>\n                    <div className=\"empty-text\">\n                        <h5>Click on a group to start a chat</h5>\n                    </div>\n                </div>\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Body;","import Pusher from 'pusher-js'\r\n\r\nconst pusher = new Pusher('ca1b9cebe8e517e3529c', {\r\n    cluster: 'eu'\r\n});\r\n\r\n\r\nexport default pusher;","import React, {Fragment, useState} from 'react';\r\nimport authContext from \"../Utils/AuthContext\";\r\nimport Token from '../Utils/authToken'\r\nimport axios from 'axios';\r\nimport pusher from \"../Utils/pusher\";\r\n\r\nfunction Footer(props) {\r\n    const {roomNumber, user, threadRoom, is_thread, is_group} = React.useContext(authContext);\r\n    const [state, setState] = useState({message: ''});\r\n\r\n    const handleChange = async (e) => {\r\n        const {value} = e.target;\r\n        pusher.connection.bind('user-typing');\r\n        if (is_group) {\r\n            const roomObject = {\r\n                roomNumber: roomNumber,\r\n                socket_id: pusher.connection.socket_id,\r\n            };\r\n            setState({message: value});\r\n            if (value.length > 0) {\r\n                await axios.post('http://localhost:8000/api/typing', roomObject, {\r\n                    headers: {'Authorization': `JWT ${Token.userToken}`}\r\n                })\r\n            } else {\r\n                await axios.get('http://localhost:8000/api/stop')\r\n            }\r\n        } else {\r\n            const threadObject = {\r\n                thread: threadRoom.id,\r\n                socket_id: pusher.connection.socket_id,\r\n            };\r\n            setState({message: value});\r\n            if (value.length > 0) {\r\n                await axios.post('http://localhost:8000/api/thread-typing', threadObject, {\r\n                    headers: {'Authorization': `JWT ${Token.userToken}`}\r\n                })\r\n            } else {\r\n                await axios.get('http://localhost:8000/api/stop-thread')\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (is_group) {\r\n            const messageObject = {\r\n                message: state.message,\r\n                room: roomNumber,\r\n                user: user.user_id\r\n            };\r\n            setState({message: ''});\r\n            try {\r\n                await axios.post('http://localhost:8000/api/messages/', messageObject);\r\n                await axios.get('http://localhost:8000/api/stop');\r\n                // getRoomMessages(roomNumber);\r\n                // broadcastMessage()\r\n            } catch (e) {\r\n                console.log(e.response.data)\r\n            }\r\n        } else {\r\n            const messageObject = {\r\n            message: state.message,\r\n            thread: threadRoom.id,\r\n            user: user.user_id\r\n        };\r\n        setState({message: ''});\r\n        try {\r\n            await axios.post('http://localhost:8000/api/messages/', messageObject);\r\n            await axios.get('http://localhost:8000/api/stop-thread');\r\n        } catch (e) {\r\n            console.log(e.response.data)\r\n        }\r\n        }\r\n\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"footer\">\r\n                <div className=\"message-icons\">\r\n                    <i className=\"fa fa-smile-o\"/>\r\n                    <i className=\"fa fa-paperclip\"/>\r\n                </div>\r\n                <div className=\"form-input\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input disabled={!is_thread && !is_group}\r\n                               type=\"text\"\r\n                               value={state.message}\r\n                               onChange={handleChange}\r\n                               placeholder=\"Type a message\"/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"message-icon2\">\r\n                    <i className=\"fa fa-microphone\"/>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {Fragment, useState} from 'react';\r\nimport authContext from \"../Utils/AuthContext\";\r\nimport Token from '../Utils/authToken'\r\nimport axios from 'axios';\r\n\r\nfunction Create(props) {\r\n    const {create, createContact} = React.useContext(authContext);\r\n    const [state, setState] = useState({username:'', loading:false});\r\n\r\n    const handleChange = (e) => {\r\n        const {value} = e.target;\r\n        setState({username : value})\r\n    };\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            loading:true\r\n        }));\r\n        const contactObject = {\r\n            other_user: state.username,\r\n        };\r\n        try {\r\n            await axios.post('http://localhost:8000/api/create', contactObject, {\r\n                headers:{'Authorization': `JWT ${Token.userToken}`}\r\n            });\r\n            setTimeout(() => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    loading:false,\r\n                    username:''\r\n                }));\r\n                createContact();\r\n            }, 1500)\r\n\r\n        }catch (e) {\r\n            setState(prevState => ({\r\n                    ...prevState,\r\n                    loading:false,\r\n                }));\r\n            console.log(e.response.data)\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className={create ? \"fixed-create showing\" : \"fixed-create\"}>\r\n                <div className=\"form-action\">\r\n                    {state.loading && <div className='spinner'/> }\r\n                    <h5>Create Your contact</h5>\r\n                    <i onClick={createContact} className='fa fa-close'/>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input className='input-class'\r\n                               value={state.username}\r\n                               onChange={handleChange}\r\n                               type=\"text\"\r\n                               placeholder='enter username'/>\r\n                        <button>Create</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Create;","import React, {Fragment, useEffect} from 'react';\r\nimport authContext from \"../Utils/AuthContext\";\r\nimport moment from \"moment\";\r\n\r\nfunction Thread({match}) {\r\n     const {user, threadRoom, getThreadNumber} = React.useContext(authContext);\r\n     const {first_user, second_user} = match.params;\r\n     useEffect(() => {\r\n        getThreadNumber(first_user, second_user)\r\n     },[first_user, getThreadNumber, second_user]);\r\n\r\n    return<Fragment>\r\n            <div className=\"thread-body\">\r\n                {threadRoom.thread_messages && threadRoom.thread_messages.map(message => {\r\n                    return <div key={message.id}\r\n                                className={user.username === message.user_name ? \"message__details sender\" : \"message__details\"}>\r\n                        <div className={user.username === message.user_name ? \"pointer2\" : 'pointer'}/>\r\n                        {user.username !== message.user_name ? <h4>{message.user_name}</h4> : null}\r\n                        <p>{message.message}</p>\r\n                        <small className=\"float-message\">{moment(message.time_stamp).format('LT')}</small>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </Fragment>\r\n}\r\nexport default Thread;","import React, {Fragment} from 'react';\nimport authContext from \"../Utils/AuthContext\";\n\nfunction EmptyBody(props) {\n     const {roomMessages, user} = React.useContext(authContext);\n    return (\n        <Fragment>\n            <div className=\"empty-body\">\n                {roomMessages.message && roomMessages.message.length > 0 ? <>\n                {roomMessages.message && roomMessages.message.map(room => {\n                    return <div key={room.id} className={user.username === room.user_name ? \"message__details sender\" : \"message__details\"}>\n                        <div className={user.username === room.user_name ? \"pointer2\" : 'pointer'}/>\n                        {user.username !== room.user_name ? <h4>{room.user_name}</h4>: null}\n                        <p>{room.message}</p>\n                        <small className=\"float-message\">9:40am</small>\n                    </div>\n                })}\n\n                </>\n                :\n                <div className='empty-message'>\n                    <div className=\"empty-icon\">\n                        <i className='fa fa-star-half-o'/>\n                    </div>\n                    <div className=\"empty-text\">\n                        <h5>Click on a group to start a chat</h5>\n                    </div>\n                </div>\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default EmptyBody;","import React, {Component, Fragment} from 'react';\r\nimport Header from \"./Header\";\r\nimport Contact from \"./Contact\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nimport Create from \"./Create\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport Thread from \"./Thread\";\r\nimport EmptyBody from \"./EmptyBody\";\r\n\r\nclass Chat extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className='container__wrapper'>\r\n                    <Header/>\r\n                    <Contact/>\r\n                    <Create/>\r\n                    <EmptyBody/>\r\n                    <Switch>\r\n                        <Route path='/chat/body/:room' component={Body}/>\r\n                        <Route path='/chat/thread/:first_user/:second_user' component={Thread}/>\r\n                    </Switch>\r\n                    <Footer/>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport axios from 'axios'\r\nimport Token from '../Utils/authToken'\r\n\r\nfunction Logout(props) {\r\n    window.location.href = '/login';\r\n    const logMeOut = async() => {\r\n        try{\r\n            await axios.post('http://localhost:8000/api/logout', {}, {\r\n                headers:{'Authorization': `JWT ${Token.userToken}`}\r\n            })\r\n        }catch (e) {\r\n            console.log(e.response.data)\r\n        }\r\n    };\r\n     localStorage.clear();\r\n    return (\r\n        <div>\r\n        <h5>Log out</h5>\r\n            {logMeOut()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React, {Component, Fragment} from 'react';\nimport authContext from \"../Utils/AuthContext\";\nimport jwtDecode from 'jwt-decode';\nimport Token from '../Utils/authToken'\nimport Login from \"./Login\";\nimport Chat from \"./Chat\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport axios from 'axios'\nimport pusher from \"../Utils/pusher\";\nimport Logout from \"./Logout\";\n\nclass MainComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user:{},\n            username:'',\n            rooms:[],\n            roomMessages:{},\n            roomNumber:0,\n            typing:false,\n            create:false,\n            threads:[],\n            thread:{},\n            threadRoom:{},\n            is_thread:false,\n            is_group:false,\n            thread_typing:false,\n            searchText:'',\n        };\n\n    }\n\n    async componentDidMount() {\n        if(Token.userToken){\n            const user = jwtDecode(Token.userToken);\n            this.setState({user});\n            this.getRooms();\n            this.getThreads()\n        }\n         const channel = pusher.subscribe('messages');\n        const that = this;\n        channel.bind('send-message', function (message) {\n            if(that.state.is_group){\n                that.getRoomMessages(that.state.roomNumber);\n            }else{\n                 that.getThreadNumber(that.state.thread.first_user, that.state.thread.second_user);\n            }\n            that.getRooms();\n            that.getThreads();\n        });\n        channel.bind('user-typing', function (data) {\n            that.setUserName(data.user);\n           if(that.state.roomNumber === data.room_number){\n               that.setState({typing:true})\n           }\n\n        });\n        channel.bind('stop-typing', function () {\n            that.setState({typing:false})\n        });\n        channel.bind('thread-typing', function (data) {\n           if(that.state.threadRoom.id === data.thread_id){\n               that.setState({thread_typing:true})\n           }\n        });\n        channel.bind('stop-thread', function () {\n            that.setState({thread_typing:false})\n        });\n    }\n\n    componentWillUnmount() {\n        pusher.unsubscribe('messages');\n        pusher.unbind_all()\n    }\n\n    broadcastMessage = () => {\n        const channel = pusher.subscribe('messages');\n        const that = this;\n        channel.bind('send-message', function (message) {\n           that.getRoomMessages(that.state.roomNumber)\n        })\n\n    };\n    setUserName = (username) => {\n        this.setState({username})\n    };\n    createContact = () => {\n        this.setState({create:!this.state.create})\n    };\n\n    getRooms = async() => {\n        const apiCall = 'http://localhost:8000/api/rooms/';\n        try{\n                const {data:rooms} = await axios.get(apiCall);\n            this.setState({rooms});\n            }catch (e) {\n\n            }\n    };\n\n    getRoomMessages = async(room) => {\n        this.setState({roomNumber:room, clicked:true, is_group:true, is_thread:false});\n        const apiCall = `http://localhost:8000/api/room/${room}/`;\n        try{\n                const roomMessag = await axios.get(apiCall, {\n                    headers:{'Authorization' : `JWT ${Token.userToken}`}\n                });\n            this.setState({roomMessages : roomMessag.data});\n            const bodyHeight = document.querySelector('.body');\n            bodyHeight.scroll(0, bodyHeight.scrollHeight);\n            }catch (e) {\n                // console.log(e.response.data)\n            }\n    };\n\n    getThreads = async() => {\n\n        try {\n            const {data:threads} = await axios.get('http://localhost:8000/api/list', {\n                headers: {'Authorization': `JWT ${Token.userToken}`}\n            });\n            this.setState({threads})\n        }catch (e) {\n            console.log(e.response.data)\n        }\n    };\n\n    getThreadNumber = async(first_user, second_user) => {\n        const thread = {...this.state.thread};\n        thread['first_user'] = first_user;\n        thread['second_user'] = second_user;\n        this.setState({thread,  is_thread:true, is_group:false});\n        try {\n            const {data:threadRoom} = await axios.get(`http://localhost:8000/api/get_thread/${first_user}/${second_user}/`)\n            this.setState({threadRoom});\n            const bodyHeight = document.querySelector('.thread-body');\n            bodyHeight.scroll(0, bodyHeight.scrollHeight);\n        }catch (e) {\n        }\n    };\n\n    handleSearchContact = (e) => {\n        this.setState({searchText: e.target.value})\n    };\n\n    render() {\n        const filterRooms = this.state.rooms.filter(room => {\n            return room.name.toLowerCase().indexOf(this.state.searchText.toLowerCase()) !== -1\n        });\n        const {user, rooms, roomMessages, roomNumber, typing,\n            username, create, threads, threadRoom, thread,\n            is_group, is_thread, thread_typing, searchText} = this.state;\n        const { getRoomMessages, broadcastMessage, setUserName,\n            createContact, getThreadNumber, handleSearchContact } = this;\n        return (\n            <Fragment>\n                <authContext.Provider value={{user, rooms, roomMessages, getRoomMessages, roomNumber,\n                broadcastMessage, typing, setUserName,\n                    username, create, createContact, threads,\n                    getThreadNumber, threadRoom, handleSearchContact,\n                    thread, is_thread, is_group, thread_typing, searchText, filterRooms}}>\n                    <Switch>\n                        <Route path='/login' component={Login}/>\n                        <Route path='/chat' component={Chat}/>\n                        <Route path='/logout' component={Logout}/>\n                        <Redirect to='/login'/>\n                    </Switch>\n                </authContext.Provider>\n            </Fragment>\n        );\n    }\n    static contextType = authContext;\n}\n\nexport default MainComponent;","import React from 'react';\nimport './App.css';\nimport MainComponent from \"./components/MainComponent\";\n\nfunction App() {\n  return (\n    <div>\n        <MainComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}